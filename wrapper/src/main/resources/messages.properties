#
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Aurora Host List Connection Plugin
AuroraHostListConnectionPlugin.providerAlreadySet=Another dynamic host list provider has already been set: {0}.

# Aurora Host List Provider
AuroraHostListProvider.clusterInstanceHostPatternRequired=The ''clusterInstanceHostPattern'' configuration property is required when an IP address or custom domain is used to connect to a cluster that provides topology information. If you would instead like to connect without failover functionality, set the 'enableClusterAwareFailover' configuration property to false.
AuroraHostListProvider.clusterInstanceHostPatternNotSupportedForRDSProxy=An RDS Proxy url can''t be used as the 'clusterInstanceHostPattern' configuration setting.
AuroraHostListProvider.invalidPattern=Invalid value for the 'clusterInstanceHostPattern' configuration setting - the host pattern must contain a '?' character as a placeholder for the DB instance identifiers of the instances in the cluster.
AuroraHostListProvider.invalidTopology=The topology query returned an invalid topology - no writer instance detected.
AuroraHostListProvider.suggestedClusterId=ClusterId ''{0}'' is suggested for url ''{1}''.
AuroraHostListProvider.parsedListEmpty=Can''t parse connection string: ''{0}''
AuroraHostListProvider.invalidQuery=Error obtaining host list. Provided database might not be an Aurora Db cluster
AuroraHostListProvider.invalidDialect=Expecting a dialect that supports a cluster topology.
AuroraHostListProvider.invalidDialectForGetHostRole=An Aurora dialect is required to analyze a host's role. The detected dialect was ''{0}''
AuroraHostListProvider.errorGettingHostRole=An error occurred while obtaining the connected host's role. This could occur if the connection is broken or if you are not connected to an Aurora database.
AuroraHostListProvider.errorIdentifyConnection=An error occurred while obtaining the connection's host ID.
AuroraHostListProvider.invalidDialectForIdentifyConnection=An Aurora dialect is required to analyze the instance associated with this connection. The detected dialect was ''{0}''
AuroraHostListProvider.errorGettingNetworkTimeout=An error occurred while getting the connection network timeout: {0}

# AWS Credentials Manager
AwsCredentialsManager.nullProvider=The configured AwsCredentialsProvider was null. If you have configured the AwsCredentialsManager to use a custom AwsCredentialsProviderHandler, please ensure the handler does not return null.

# AWS SDK
AwsSdk.unsupportedRegion=Unsupported AWS region ''{0}''. For supported regions please read https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html

# AWS Secrets Manager Connection Plugin
AwsSecretsManagerConnectionPlugin.javaSdkNotInClasspath=Required dependency 'AWS Java SDK for AWS Secrets Manager' is not on the classpath.
AwsSecretsManagerConnectionPlugin.jacksonDatabindNotInClasspath=Required dependency 'Jackson Databind' is not on the classpath.
AwsSecretsManagerConnectionPlugin.failedToFetchDbCredentials=Was not able to either fetch or read the database credentials from AWS Secrets Manager. Ensure the correct secretId and region properties have been provided.
AwsSecretsManagerConnectionPlugin.missingRequiredConfigParameter=Configuration parameter ''{0}'' is required.
AwsSecretsManagerConnectionPlugin.failedLogin=Login failed. SQLState=''{0}''
AwsSecretsManagerConnectionPlugin.unhandledException=Unhandled exception: ''{0}''

# AWS Wrapper Data Source
AwsWrapperDataSource.missingTarget=Target data source class name or JDBC url is required.
AwsWrapperDataSource.missingUrl=No JDBC URL was provided, or a JDBC URL couldn't be built from the provided information.
AwsWrapperDataSource.missingDriver=Can't find a suitable driver for ''{0}''

# Cluster Aware Reader Failover Handler
ClusterAwareReaderFailoverHandler.interruptedThread=Thread was interrupted.
ClusterAwareReaderFailoverHandler.attemptingReaderConnection=Trying to connect to reader: ''{0}'', with properties ''{1}''
ClusterAwareReaderFailoverHandler.successfulReaderConnection=Connected to reader: ''{0}''
ClusterAwareReaderFailoverHandler.failedReaderConnection=Failed to connect to reader: ''{0}''
ClusterAwareReaderFailoverHandler.invalidTopology=''{0}'' was called with an invalid (null or empty) topology.

# Cluster Aware Writer Failover Handler
ClusterAwareWriterFailoverHandler.interruptedThread=Thread was interrupted.
ClusterAwareWriterFailoverHandler.successfullyReconnectedToWriterInstance=Successfully re-connected to the current writer instance: ''{0}''
ClusterAwareWriterFailoverHandler.failedToConnectToWriterInstance=Failed to connect to the writer instance.
ClusterAwareWriterFailoverHandler.successfullyConnectedToNewWriterInstance=Successfully connected to the new writer instance: ''{0}''
ClusterAwareWriterFailoverHandler.successfulConnectionInvalidTopology={0} successfully established a connection but doesn't contain a valid topology.
ClusterAwareWriterFailoverHandler.taskAAttemptReconnectToWriterInstance=[TaskA] Attempting to re-connect to the current writer instance: ''{0}''
ClusterAwareWriterFailoverHandler.failoverCalledWithInvalidTopology=Failover was called with an invalid (null or empty) topology.
ClusterAwareWriterFailoverHandler.taskAFinished=[TaskA] Finished
ClusterAwareWriterFailoverHandler.taskBAttemptConnectionToNewWriterInstance=[TaskB] Attempting to connect to a new writer instance.
ClusterAwareWriterFailoverHandler.taskBFinished=[TaskB] Finished
ClusterAwareWriterFailoverHandler.taskBConnectedToReader=[TaskB] Connected to reader: ''{0}''
ClusterAwareWriterFailoverHandler.taskBFailedToConnectToAnyReader=[TaskB] Failed to connect to any reader.
ClusterAwareWriterFailoverHandler.taskBTopologyObtained=[TaskB] Topology obtained: {0}
ClusterAwareWriterFailoverHandler.taskBAttemptConnectionToNewWriter=[TaskB] Trying to connect to a new writer: ''{0}''
ClusterAwareWriterFailoverHandler.taskBEncounteredException=[TaskB] encountered an exception: {0}
ClusterAwareWriterFailoverHandler.taskAEncounteredException=[TaskA] encountered an exception: {0}
ClusterAwareWriterFailoverHandler.standaloneNode=[TaskB] Host {0} is not yet connected to a cluster. The cluster is still being reconfigured.
ClusterAwareWriterFailoverHandler.alreadyWriter=Current reader connection is actually a new writer connection.

# Connection String Host List Provider
ConnectionStringHostListProvider.parsedListEmpty=Can''t parse connection string: ''{0}''.
ConnectionStringHostListProvider.errorIdentifyConnection=An error occurred while obtaining the connection's host ID.

# Connection Plugin Manager
ConnectionPluginManager.configurationProfileNotFound=Configuration profile ''{0}'' not found.
ConnectionPluginManager.releaseResources=Releasing resources.
ConnectionPluginManager.unknownPluginCode=Unknown plugin code: ''{0}''.
ConnectionPluginManager.unableToLoadPlugin=Unable to load connection plugin factory: ''{0}''.
ConnectionPluginManager.methodInvokedAgainstOldConnection=The internal connection has changed since ''{0}'' was created. This is likely due to failover or read-write splitting functionality. To ensure you are using the updated connection, please re-create Statement and ResultSet objects after failover and/or calling setReadOnly.

# Connection Provider
ConnectionProvider.noConnection=The target driver did not return a connection.
ConnectionProvider.unsupportedHostSpecSelectorStrategy=Unsupported host selection strategy ''{0}'' specified for this connection provider ''{1}''. Please visit the documentation for all supported strategies.

# Connection Url Builder
ConnectionUrlBuilder.missingJdbcProtocol=Missing JDBC protocol and/or host name. Could not construct URL.
ConnectionUrlBuilder.failureEncodingConnectionUrl=Failed to encode connectionURL properties.

# Connect Time Connection Plugin
ConnectTimeConnectionPlugin.connectTime=Connected in {0} nanos.

# Connection Wrapper
ConnectionWrapper.protocolNotFound=Url should contain a driver protocol. Protocol is not found in url: ''{0}''
ConnectionWrapper.unclosedConnectionInstantiated=Unclosed connection was instantiated at this point:
ConnectionWrapper.connectionNotOpen=Initial connection isn't open.
ConnectionWrapper.finalizingUnclosedConnection=Finalizing a connection that was never closed.

# Console Consumer
ConsoleConsumer.unexpectedOutputType=Unexpected outputType: ''{0}''.

# Data Cache Connection Plugin
DataCacheConnectionPlugin.queryResultsCached=[{0}] Query results will be cached: {1}

# Default Connection Plugin
DefaultConnectionPlugin.executingMethod=Executing method: ''{0}''
DefaultConnectionPlugin.noHostsAvailable=The default connection plugin received an empty host list from the plugin service.
DefaultConnectionPlugin.unknownRoleRequested=A HostSpec with a role of HostRole.UNKNOWN was requested via getHostSpecByStrategy. The requested role must be either HostRole.WRITER or HostRole.READER

# Driver
Driver.nullUrl=Url is null.
Driver.alreadyRegistered=Driver is already registered. It can only be registered once.
Driver.missingDriver=Can''t find a suitable driver for ''{0}''.
Driver.notRegistered=Driver is not registered (or it has not been registered using Driver.register() method).
Driver.urlParsingFailed=Url [{0}] parsing failed with error: [{1}]

# Execution Time Connection Plugin
ExecutionTimeConnectionPlugin.executionTime=Executed {0} in {1} nanos.

# Failover Connection Plugin
Failover.transactionResolutionUnknownError=Transaction resolution unknown. Please re-configure session state if required and try restarting the transaction.
Failover.connectionChangedError=The active SQL connection has changed due to a connection failure. Please re-configure session state if required.
Failover.parameterValue={0}={1}
Failover.unableToConnectToWriter=Unable to establish SQL connection to the writer instance.
Failover.unableToConnectToReader=Unable to establish SQL connection to the reader instance.
Failover.detectedException=Detected an exception while executing a command: {0}
Failover.failoverDisabled=Cluster-aware failover is disabled.
Failover.failoverEnabled=Cluster-aware failover is enabled.
Failover.establishedConnection=Connected to: {0}
Failover.startWriterFailover=Starting writer failover procedure.
Failover.startReaderFailover=Starting reader failover procedure.
Failover.topologyObtained=Topology obtained: {0}
Failover.invalidNode=Node is no longer available in the topology: {0}
Failover.failedToUpdateCurrentHostspecAvailability=Failed to update current hostspec availability.
Failover.noOperationsAfterConnectionClosed=No operations allowed after connection closed.

# HikariPooledConnectionProvider
HikariPooledConnectionProvider.errorConnectingWithDataSource=Unable to connect to ''{0}'' using the Hikari data source.
HikariPooledConnectionProvider.errorConnectingWithDataSourceWithCause=Unable to connect to ''{0}'' using the Hikari data source. Exception message: ''{1}''

# Host Monitoring Connection Plugin
HostMonitoringConnectionPlugin.activatedMonitoring=Executing method ''{0}'', monitoring is activated.
HostMonitoringConnectionPlugin.monitoringDeactivated=Monitoring deactivated for method ''{0}''.
HostMonitoringConnectionPlugin.unavailableNode=Node ''{0}'' is unavailable.
HostMonitoringConnectionPlugin.errorIdentifyingConnection=Error occurred while identifying connection: ''{0}''.
HostMonitoringConnectionPlugin.unableToIdentifyConnection=Unable to identify the given connection: ''{0}'', please ensure the correct host list provider is specified. The host list provider in use is: ''{1}''.

# HostSelector
HostSelector.noHostsMatchingRole=No hosts were found matching the requested ''{0}'' role.

# IAM Auth Connection Plugin
IamAuthConnectionPlugin.unsupportedHostname=Unsupported AWS hostname {0}. Amazon domain name in format *.AWS-Region.rds.amazonaws.com or *.rds.AWS-Region.amazonaws.com.cn is expected.
IamAuthConnectionPlugin.useCachedIamToken=Use cached IAM token = ''{0}''
IamAuthConnectionPlugin.generatedNewIamToken=Generated new IAM token = ''{0}''
IamAuthConnectionPlugin.invalidPort=Port number: {0} is not valid. Port number should be greater than zero.
IamAuthConnectionPlugin.unhandledException=Unhandled exception: ''{0}''
IamAuthConnectionPlugin.connectException=Error occurred while opening a connection: ''{0}''

# Log Query Connection Plugin
LogQueryConnectionPlugin.executingQuery=[{0}] Executing query: {1}

# Monitor Connection Context
MonitorConnectionContext.exceptionAbortingConnection=Exception during aborting connection: {0}
MonitorConnectionContext.hostDead=Host {0} is *dead*.
MonitorConnectionContext.hostNotResponding=Host {0} is not *responding* {1}.
MonitorConnectionContext.hostAlive=Host {0} is *alive*.

# Monitor Thread Container
MonitorThreadContainer.emptyNodeKeys=Provided node keys are empty.

# Monitor Impl
MonitorImpl.contextNullWarning=Parameter 'context' should not be null.

# Monitor Service Impl
MonitorServiceImpl.nullMonitorParam=Parameter 'monitor' should not be null.
MonitorServiceImpl.emptyAliasSet=Empty alias set passed for ''{0}''. Set should not be empty.
MonitorServiceImpl.errorPopulatingAliases=Error occurred while populating aliases: ''{0}''.

# Plugin Service Impl
PluginServiceImpl.hostListEmpty=Current host list is empty.
PluginServiceImpl.releaseResources=Releasing resources.
PluginServiceImpl.hostListException=Exception while getting a host list.
PluginServiceImpl.hostAliasNotFound=Can''t find any host by the following aliases: ''{0}''.
PluginServiceImpl.hostsChangelistEmpty=There are no changes in the hosts' availability.
PluginServiceImpl.failedToRetrieveHostPort=Could not retrieve Host:Port for connection.
PluginServiceImpl.nonEmptyAliases=fillAliases called when HostSpec already contains the following aliases: ''{0}''.

# Property Utils
PropertyUtils.setMethodDoesNotExistOnTarget=Set method for property ''{0}'' does not exist on target ''{1}''.
PropertyUtils.failedToSetProperty=Failed to set property ''{0}'' on target ''{1}''.
PropertyUtils.failedToSetPropertyWithReason=Failed to set property ''{0}'' on target ''{1}''. {2}

# Read Write Splitting Plugin
ReadWriteSplittingPlugin.setReadOnlyOnClosedConnection=setReadOnly cannot be called on a closed connection.
ReadWriteSplittingPlugin.errorSwitchingToCachedReader=An error occurred while trying to switch to a cached reader connection: ''{0}''. The driver will attempt to establish a new reader connection.
ReadWriteSplittingPlugin.errorSwitchingToCachedReaderWithCause=An error occurred while trying to switch to a cached reader connection: ''{0}''. Error message: ''{1}''. The driver will attempt to establish a new reader connection.
ReadWriteSplittingPlugin.errorSwitchingToReader=An error occurred while trying to switch to a reader connection.
ReadWriteSplittingPlugin.errorSwitchingToWriter=An error occurred while trying to switch to a writer connection.
ReadWriteSplittingPlugin.closingInternalConnections=Closing all internal connections except for the current one.
ReadWriteSplittingPlugin.setReaderConnection=Reader connection set to ''{0}''
ReadWriteSplittingPlugin.setWriterConnection=Writer connection set to ''{0}''
ReadWriteSplittingPlugin.setReadOnlyFalseInTransaction=setReadOnly(false) was called on a read-only connection inside a transaction. Please complete the transaction before calling setReadOnly(false).
ReadWriteSplittingPlugin.fallbackToWriter=Failed to switch to a reader; the current writer will be used as a fallback: ''{0}''
ReadWriteSplittingPlugin.switchedFromWriterToReader=Switched from a writer to a reader host. New reader host: ''{0}''
ReadWriteSplittingPlugin.switchedFromReaderToWriter=Switched from a reader to a writer host. New writer host: ''{0}''
ReadWriteSplittingPlugin.settingCurrentConnection=Setting the current connection to ''{0}''
ReadWriteSplittingPlugin.noWriterFound=No writer was found in the current host list.
ReadWriteSplittingPlugin.noReadersFound=A reader instance was requested via setReadOnly, but there are no readers in the host list. The current writer will be used as a fallback: ''{0}''
ReadWriteSplittingPlugin.emptyHostList=Host list is empty.
ReadWriteSplittingPlugin.exceptionWhileExecutingCommand=Detected an exception while executing a command: ''{0}''
ReadWriteSplittingPlugin.failoverExceptionWhileExecutingCommand=Detected a failover exception while executing a command: ''{0}''
ReadWriteSplittingPlugin.executingAgainstOldConnection=Executing method against old connection: ''{0}''
ReadWriteSplittingPlugin.noReadersAvailable=The plugin was unable to establish a reader connection to any reader instance.
ReadWriteSplittingPlugin.successfullyConnectedToReader=Successfully connected to a new reader host: ''{0}''
ReadWriteSplittingPlugin.failedToConnectToReader=Failed to connect to reader host: ''{0}''
ReadWriteSplittingPlugin.unsupportedHostSpecSelectorStrategy=Unsupported host selection strategy ''{0}'' specified in plugin configuration parameter ''readerHostSelectorStrategy''. Please visit the Read/Write Splitting Plugin documentation for all supported strategies.
ReadWriteSplittingPlugin.errorVerifyingInitialHostSpecRole=An error occurred while obtaining the connected host's role. This could occur if the connection is broken or if you are not connected to an Aurora database.

# Wrapper Utils
WrapperUtils.noWrapperClassExists=No wrapper class exists for ''{0}''.
WrapperUtils.failedToInitializeClass=Can''t initialize class ''{0}''.

# Aurora Stale DNS
AuroraStaleDnsPlugin.requireDynamicProvider=Dynamic host list provider is required.
AuroraStaleDnsHelper.clusterEndpointDns=Cluster endpoint resolves to {0}.
AuroraStaleDnsHelper.writerHostSpec=Writer host: {0}
AuroraStaleDnsHelper.writerInetAddress=Writer host address: {0}
AuroraStaleDnsHelper.staleDnsDetected=Stale DNS data detected. Opening a connection to ''{0}''.
AuroraStaleDnsHelper.reset=Reset stored writer host.

# Opened Connection Tracker
OpenedConnectionTracker.unableToPopulateOpenedConnectionQueue=[Internal Error] The driver is unable to track this opened connection because the instance endpoint is unknown.
OpenedConnectionTracker.invalidatingConnections=Invalidating opened connections to host: ''{0}''

# Util
Utils.topology=Topology: \n{0}

# Dialect Manager
DialectManager.unknownDialectCode=Unknown dialect code: ''{0}''.
DialectManager.unknownDialect=Database dialect can''t be identified. Use configuration parameter ''wrapperDialect'' to configure it.

# Target Driver Dialect Manager
TargetDriverDialectManager.unknownDialectCode=Unknown target driver dialect code: ''{0}''.
TargetDriverDialectManager.customDialectNotSupported=Provided custom target driver dialect will be ignored.
TargetDriverDialectManager.useDialect=Target driver dialect set to: ''{0}'', {1}.
TargetDriverDialectManager.unexpectedClass=Unexpected DataSource class. Expected class: {0}, actual class: {1}.


